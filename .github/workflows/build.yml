# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

name: build

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.adoc'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'
  push:
    branches:
      - main
    paths-ignore:
      - '**.adoc'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Cache Maven modules
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
    - name: Test
      run: |
        make check-licenses test package-artifacts

  test:
    runs-on: ubuntu-latest
    env:
      YAKS_IMAGE_NAME: "kind-registry:5000/yaks"
      YAKS_IMAGE_VERSION: "latest"
      YAKS_RUN_OPTIONS: "--timeout=180s"
    steps:
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Cache Maven modules
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
    - name: Kind Cluster
      uses: container-tools/kind-action@v1
      with:
        version: v0.14.0
        node_image: kindest/node:v1.23.6@sha256:b1fa224cc6c7ff32455e0b1fd9cbfd3d3bc87ecaa8fcb06961ed1afb3db0f9ae
    - name: Info
      run: |
        kubectl version
        kubectl cluster-info
        kubectl describe nodes
    - name: Camel K Tools
      uses: container-tools/camel-k-action@v1.0.3
      with:
        version: v1.12.1
    - name: Build
      run: |
        make IMAGE_NAME=$YAKS_IMAGE_NAME VERSION=$YAKS_IMAGE_VERSION set-version-file build images-no-test
        sudo cp yaks /usr/local/bin/
        docker push $YAKS_IMAGE_NAME:$YAKS_IMAGE_VERSION
    - name: Install Camel K
      run: |
        # Configure install options
        export KAMEL_INSTALL_BUILD_PUBLISH_STRATEGY=Spectrum
        export KAMEL_INSTALL_REGISTRY=$KIND_REGISTRY
        export KAMEL_INSTALL_REGISTRY_INSECURE=true
        
        kamel install --global --olm=false
    - name: Install YAKS
      run: |
        yaks install --operator-image $YAKS_IMAGE_NAME:$YAKS_IMAGE_VERSION
    - name: E2E Tests
      run: |
        # Eventually `yaks run examples` should work

        # For now:
        yaks run examples/yaml $YAKS_RUN_OPTIONS
        yaks run examples/xml $YAKS_RUN_OPTIONS
        yaks run examples/groovy $YAKS_RUN_OPTIONS
        yaks run examples/camel $YAKS_RUN_OPTIONS
        yaks run examples/camel-k $YAKS_RUN_OPTIONS
        # yaks run examples/extension $YAKS_RUN_OPTIONS --upload steps
        yaks run examples/http $YAKS_RUN_OPTIONS
        yaks run examples/jdbc $YAKS_RUN_OPTIONS
        yaks run examples/jitpack $YAKS_RUN_OPTIONS
        yaks run examples/kamelets $YAKS_RUN_OPTIONS
        #yaks run examples/knative $YAKS_RUN_OPTIONS
        yaks run examples/kubernetes $YAKS_RUN_OPTIONS
        yaks run examples/logging $YAKS_RUN_OPTIONS
        yaks run examples/namespace $YAKS_RUN_OPTIONS
        yaks run examples/openapi $YAKS_RUN_OPTIONS
        yaks run examples/openapi-server $YAKS_RUN_OPTIONS
        yaks run examples/run-scripts $YAKS_RUN_OPTIONS
        yaks run examples/secrets $YAKS_RUN_OPTIONS
        yaks run examples/settings $YAKS_RUN_OPTIONS
        yaks run examples/test-group $YAKS_RUN_OPTIONS
        yaks run examples/helloworld.feature $YAKS_RUN_OPTIONS
        yaks run examples/selenium $YAKS_RUN_OPTIONS
        yaks run examples/dump $YAKS_RUN_OPTIONS
        yaks run examples/postgresql $YAKS_RUN_OPTIONS
        yaks run examples/aws-s3 $YAKS_RUN_OPTIONS
        yaks run examples/aws-kinesis $YAKS_RUN_OPTIONS
